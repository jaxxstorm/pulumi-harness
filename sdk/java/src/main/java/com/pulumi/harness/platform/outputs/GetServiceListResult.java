// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.platform.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.harness.platform.outputs.GetServiceListService;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetServiceListResult {
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private @Nullable String orgId;
    private @Nullable String projectId;
    private List<GetServiceListService> services;

    private GetServiceListResult() {}
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public Optional<String> orgId() {
        return Optional.ofNullable(this.orgId);
    }
    public Optional<String> projectId() {
        return Optional.ofNullable(this.projectId);
    }
    public List<GetServiceListService> services() {
        return this.services;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetServiceListResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String id;
        private @Nullable String orgId;
        private @Nullable String projectId;
        private List<GetServiceListService> services;
        public Builder() {}
        public Builder(GetServiceListResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.id = defaults.id;
    	      this.orgId = defaults.orgId;
    	      this.projectId = defaults.projectId;
    	      this.services = defaults.services;
        }

        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetServiceListResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder orgId(@Nullable String orgId) {

            this.orgId = orgId;
            return this;
        }
        @CustomType.Setter
        public Builder projectId(@Nullable String projectId) {

            this.projectId = projectId;
            return this;
        }
        @CustomType.Setter
        public Builder services(List<GetServiceListService> services) {
            if (services == null) {
              throw new MissingRequiredPropertyException("GetServiceListResult", "services");
            }
            this.services = services;
            return this;
        }
        public Builder services(GetServiceListService... services) {
            return services(List.of(services));
        }
        public GetServiceListResult build() {
            final var _resultValue = new GetServiceListResult();
            _resultValue.id = id;
            _resultValue.orgId = orgId;
            _resultValue.projectId = projectId;
            _resultValue.services = services;
            return _resultValue;
        }
    }
}
