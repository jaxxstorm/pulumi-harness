// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.platform.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.harness.platform.inputs.GetGitopsApplicationsApplicationSpecSourcePluginEnv;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetGitopsApplicationsApplicationSpecSourcePlugin extends com.pulumi.resources.InvokeArgs {

    public static final GetGitopsApplicationsApplicationSpecSourcePlugin Empty = new GetGitopsApplicationsApplicationSpecSourcePlugin();

    /**
     * Entry in the GitOps application&#39;s environment.
     * 
     */
    @Import(name="envs")
    private @Nullable List<GetGitopsApplicationsApplicationSpecSourcePluginEnv> envs;

    /**
     * @return Entry in the GitOps application&#39;s environment.
     * 
     */
    public Optional<List<GetGitopsApplicationsApplicationSpecSourcePluginEnv>> envs() {
        return Optional.ofNullable(this.envs);
    }

    /**
     * Name of the plugin.
     * 
     */
    @Import(name="name")
    private @Nullable String name;

    /**
     * @return Name of the plugin.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }

    private GetGitopsApplicationsApplicationSpecSourcePlugin() {}

    private GetGitopsApplicationsApplicationSpecSourcePlugin(GetGitopsApplicationsApplicationSpecSourcePlugin $) {
        this.envs = $.envs;
        this.name = $.name;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetGitopsApplicationsApplicationSpecSourcePlugin defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetGitopsApplicationsApplicationSpecSourcePlugin $;

        public Builder() {
            $ = new GetGitopsApplicationsApplicationSpecSourcePlugin();
        }

        public Builder(GetGitopsApplicationsApplicationSpecSourcePlugin defaults) {
            $ = new GetGitopsApplicationsApplicationSpecSourcePlugin(Objects.requireNonNull(defaults));
        }

        /**
         * @param envs Entry in the GitOps application&#39;s environment.
         * 
         * @return builder
         * 
         */
        public Builder envs(@Nullable List<GetGitopsApplicationsApplicationSpecSourcePluginEnv> envs) {
            $.envs = envs;
            return this;
        }

        /**
         * @param envs Entry in the GitOps application&#39;s environment.
         * 
         * @return builder
         * 
         */
        public Builder envs(GetGitopsApplicationsApplicationSpecSourcePluginEnv... envs) {
            return envs(List.of(envs));
        }

        /**
         * @param name Name of the plugin.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable String name) {
            $.name = name;
            return this;
        }

        public GetGitopsApplicationsApplicationSpecSourcePlugin build() {
            return $;
        }
    }

}
