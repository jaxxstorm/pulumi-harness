// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.platform.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.harness.platform.outputs.GetGitopsProjectProjectSpecClusterResourceWhitelist;
import com.pulumi.harness.platform.outputs.GetGitopsProjectProjectSpecDestination;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class GetGitopsProjectProjectSpec {
    /**
     * @return ClusterResourceWhitelist contains list of whitelisted cluster level resources.
     * 
     */
    private @Nullable List<GetGitopsProjectProjectSpecClusterResourceWhitelist> clusterResourceWhitelists;
    /**
     * @return Destinations contains list of destinations available for deployment.
     * 
     */
    private @Nullable List<GetGitopsProjectProjectSpecDestination> destinations;
    /**
     * @return SourceRepos contains list of repository URLs which can be used for deployment.
     * 
     */
    private @Nullable List<String> sourceRepos;

    private GetGitopsProjectProjectSpec() {}
    /**
     * @return ClusterResourceWhitelist contains list of whitelisted cluster level resources.
     * 
     */
    public List<GetGitopsProjectProjectSpecClusterResourceWhitelist> clusterResourceWhitelists() {
        return this.clusterResourceWhitelists == null ? List.of() : this.clusterResourceWhitelists;
    }
    /**
     * @return Destinations contains list of destinations available for deployment.
     * 
     */
    public List<GetGitopsProjectProjectSpecDestination> destinations() {
        return this.destinations == null ? List.of() : this.destinations;
    }
    /**
     * @return SourceRepos contains list of repository URLs which can be used for deployment.
     * 
     */
    public List<String> sourceRepos() {
        return this.sourceRepos == null ? List.of() : this.sourceRepos;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetGitopsProjectProjectSpec defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<GetGitopsProjectProjectSpecClusterResourceWhitelist> clusterResourceWhitelists;
        private @Nullable List<GetGitopsProjectProjectSpecDestination> destinations;
        private @Nullable List<String> sourceRepos;
        public Builder() {}
        public Builder(GetGitopsProjectProjectSpec defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.clusterResourceWhitelists = defaults.clusterResourceWhitelists;
    	      this.destinations = defaults.destinations;
    	      this.sourceRepos = defaults.sourceRepos;
        }

        @CustomType.Setter
        public Builder clusterResourceWhitelists(@Nullable List<GetGitopsProjectProjectSpecClusterResourceWhitelist> clusterResourceWhitelists) {

            this.clusterResourceWhitelists = clusterResourceWhitelists;
            return this;
        }
        public Builder clusterResourceWhitelists(GetGitopsProjectProjectSpecClusterResourceWhitelist... clusterResourceWhitelists) {
            return clusterResourceWhitelists(List.of(clusterResourceWhitelists));
        }
        @CustomType.Setter
        public Builder destinations(@Nullable List<GetGitopsProjectProjectSpecDestination> destinations) {

            this.destinations = destinations;
            return this;
        }
        public Builder destinations(GetGitopsProjectProjectSpecDestination... destinations) {
            return destinations(List.of(destinations));
        }
        @CustomType.Setter
        public Builder sourceRepos(@Nullable List<String> sourceRepos) {

            this.sourceRepos = sourceRepos;
            return this;
        }
        public Builder sourceRepos(String... sourceRepos) {
            return sourceRepos(List.of(sourceRepos));
        }
        public GetGitopsProjectProjectSpec build() {
            final var _resultValue = new GetGitopsProjectProjectSpec();
            _resultValue.clusterResourceWhitelists = clusterResourceWhitelists;
            _resultValue.destinations = destinations;
            _resultValue.sourceRepos = sourceRepos;
            return _resultValue;
        }
    }
}
