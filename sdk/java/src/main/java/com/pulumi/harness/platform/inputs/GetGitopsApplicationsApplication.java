// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.platform.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.harness.platform.inputs.GetGitopsApplicationsApplicationMetadata;
import com.pulumi.harness.platform.inputs.GetGitopsApplicationsApplicationSpec;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetGitopsApplicationsApplication extends com.pulumi.resources.InvokeArgs {

    public static final GetGitopsApplicationsApplication Empty = new GetGitopsApplicationsApplication();

    /**
     * Metadata corresponding to the resources. This includes all the objects a user must create.
     * 
     */
    @Import(name="metadatas")
    private @Nullable List<GetGitopsApplicationsApplicationMetadata> metadatas;

    /**
     * @return Metadata corresponding to the resources. This includes all the objects a user must create.
     * 
     */
    public Optional<List<GetGitopsApplicationsApplicationMetadata>> metadatas() {
        return Optional.ofNullable(this.metadatas);
    }

    /**
     * Specifications of the GitOps application. This includes the repository URL, application definition, source, destination and sync policy.
     * 
     */
    @Import(name="specs")
    private @Nullable List<GetGitopsApplicationsApplicationSpec> specs;

    /**
     * @return Specifications of the GitOps application. This includes the repository URL, application definition, source, destination and sync policy.
     * 
     */
    public Optional<List<GetGitopsApplicationsApplicationSpec>> specs() {
        return Optional.ofNullable(this.specs);
    }

    private GetGitopsApplicationsApplication() {}

    private GetGitopsApplicationsApplication(GetGitopsApplicationsApplication $) {
        this.metadatas = $.metadatas;
        this.specs = $.specs;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetGitopsApplicationsApplication defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetGitopsApplicationsApplication $;

        public Builder() {
            $ = new GetGitopsApplicationsApplication();
        }

        public Builder(GetGitopsApplicationsApplication defaults) {
            $ = new GetGitopsApplicationsApplication(Objects.requireNonNull(defaults));
        }

        /**
         * @param metadatas Metadata corresponding to the resources. This includes all the objects a user must create.
         * 
         * @return builder
         * 
         */
        public Builder metadatas(@Nullable List<GetGitopsApplicationsApplicationMetadata> metadatas) {
            $.metadatas = metadatas;
            return this;
        }

        /**
         * @param metadatas Metadata corresponding to the resources. This includes all the objects a user must create.
         * 
         * @return builder
         * 
         */
        public Builder metadatas(GetGitopsApplicationsApplicationMetadata... metadatas) {
            return metadatas(List.of(metadatas));
        }

        /**
         * @param specs Specifications of the GitOps application. This includes the repository URL, application definition, source, destination and sync policy.
         * 
         * @return builder
         * 
         */
        public Builder specs(@Nullable List<GetGitopsApplicationsApplicationSpec> specs) {
            $.specs = specs;
            return this;
        }

        /**
         * @param specs Specifications of the GitOps application. This includes the repository URL, application definition, source, destination and sync policy.
         * 
         * @return builder
         * 
         */
        public Builder specs(GetGitopsApplicationsApplicationSpec... specs) {
            return specs(List.of(specs));
        }

        public GetGitopsApplicationsApplication build() {
            return $;
        }
    }

}
