// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.platform.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetDelegatetokenPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetDelegatetokenPlainArgs Empty = new GetDelegatetokenPlainArgs();

    @Import(name="accountId", required=true)
    private String accountId;

    public String accountId() {
        return this.accountId;
    }

    @Import(name="createdAt")
    private @Nullable Integer createdAt;

    public Optional<Integer> createdAt() {
        return Optional.ofNullable(this.createdAt);
    }

    @Import(name="name", required=true)
    private String name;

    public String name() {
        return this.name;
    }

    @Import(name="orgId")
    private @Nullable String orgId;

    public Optional<String> orgId() {
        return Optional.ofNullable(this.orgId);
    }

    @Import(name="projectId")
    private @Nullable String projectId;

    public Optional<String> projectId() {
        return Optional.ofNullable(this.projectId);
    }

    @Import(name="tokenStatus")
    private @Nullable String tokenStatus;

    public Optional<String> tokenStatus() {
        return Optional.ofNullable(this.tokenStatus);
    }

    @Import(name="value")
    private @Nullable String value;

    public Optional<String> value() {
        return Optional.ofNullable(this.value);
    }

    private GetDelegatetokenPlainArgs() {}

    private GetDelegatetokenPlainArgs(GetDelegatetokenPlainArgs $) {
        this.accountId = $.accountId;
        this.createdAt = $.createdAt;
        this.name = $.name;
        this.orgId = $.orgId;
        this.projectId = $.projectId;
        this.tokenStatus = $.tokenStatus;
        this.value = $.value;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetDelegatetokenPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetDelegatetokenPlainArgs $;

        public Builder() {
            $ = new GetDelegatetokenPlainArgs();
        }

        public Builder(GetDelegatetokenPlainArgs defaults) {
            $ = new GetDelegatetokenPlainArgs(Objects.requireNonNull(defaults));
        }

        public Builder accountId(String accountId) {
            $.accountId = accountId;
            return this;
        }

        public Builder createdAt(@Nullable Integer createdAt) {
            $.createdAt = createdAt;
            return this;
        }

        public Builder name(String name) {
            $.name = name;
            return this;
        }

        public Builder orgId(@Nullable String orgId) {
            $.orgId = orgId;
            return this;
        }

        public Builder projectId(@Nullable String projectId) {
            $.projectId = projectId;
            return this;
        }

        public Builder tokenStatus(@Nullable String tokenStatus) {
            $.tokenStatus = tokenStatus;
            return this;
        }

        public Builder value(@Nullable String value) {
            $.value = value;
            return this;
        }

        public GetDelegatetokenPlainArgs build() {
            if ($.accountId == null) {
                throw new MissingRequiredPropertyException("GetDelegatetokenPlainArgs", "accountId");
            }
            if ($.name == null) {
                throw new MissingRequiredPropertyException("GetDelegatetokenPlainArgs", "name");
            }
            return $;
        }
    }

}
