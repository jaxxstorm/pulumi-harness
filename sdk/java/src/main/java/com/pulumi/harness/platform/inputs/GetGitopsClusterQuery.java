// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.platform.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.harness.platform.inputs.GetGitopsClusterQueryId;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetGitopsClusterQuery extends com.pulumi.resources.InvokeArgs {

    public static final GetGitopsClusterQuery Empty = new GetGitopsClusterQuery();

    /**
     * Cluster server URL or the cluster name.
     * 
     */
    @Import(name="ids")
    private @Nullable List<GetGitopsClusterQueryId> ids;

    /**
     * @return Cluster server URL or the cluster name.
     * 
     */
    public Optional<List<GetGitopsClusterQueryId>> ids() {
        return Optional.ofNullable(this.ids);
    }

    /**
     * Name of the GitOps cluster.
     * 
     */
    @Import(name="name")
    private @Nullable String name;

    /**
     * @return Name of the GitOps cluster.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Server of the GitOps cluster.
     * 
     */
    @Import(name="server")
    private @Nullable String server;

    /**
     * @return Server of the GitOps cluster.
     * 
     */
    public Optional<String> server() {
        return Optional.ofNullable(this.server);
    }

    private GetGitopsClusterQuery() {}

    private GetGitopsClusterQuery(GetGitopsClusterQuery $) {
        this.ids = $.ids;
        this.name = $.name;
        this.server = $.server;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetGitopsClusterQuery defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetGitopsClusterQuery $;

        public Builder() {
            $ = new GetGitopsClusterQuery();
        }

        public Builder(GetGitopsClusterQuery defaults) {
            $ = new GetGitopsClusterQuery(Objects.requireNonNull(defaults));
        }

        /**
         * @param ids Cluster server URL or the cluster name.
         * 
         * @return builder
         * 
         */
        public Builder ids(@Nullable List<GetGitopsClusterQueryId> ids) {
            $.ids = ids;
            return this;
        }

        /**
         * @param ids Cluster server URL or the cluster name.
         * 
         * @return builder
         * 
         */
        public Builder ids(GetGitopsClusterQueryId... ids) {
            return ids(List.of(ids));
        }

        /**
         * @param name Name of the GitOps cluster.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable String name) {
            $.name = name;
            return this;
        }

        /**
         * @param server Server of the GitOps cluster.
         * 
         * @return builder
         * 
         */
        public Builder server(@Nullable String server) {
            $.server = server;
            return this;
        }

        public GetGitopsClusterQuery build() {
            return $;
        }
    }

}
