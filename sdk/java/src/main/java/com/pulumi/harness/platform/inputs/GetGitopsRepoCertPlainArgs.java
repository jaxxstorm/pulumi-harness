// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.platform.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetGitopsRepoCertPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetGitopsRepoCertPlainArgs Empty = new GetGitopsRepoCertPlainArgs();

    /**
     * account identifier of the Repository Certificates.
     * 
     */
    @Import(name="accountId", required=true)
    private String accountId;

    /**
     * @return account identifier of the Repository Certificates.
     * 
     */
    public String accountId() {
        return this.accountId;
    }

    /**
     * agent identifier of the Repository Certificates.
     * 
     */
    @Import(name="agentId")
    private @Nullable String agentId;

    /**
     * @return agent identifier of the Repository Certificates.
     * 
     */
    public Optional<String> agentId() {
        return Optional.ofNullable(this.agentId);
    }

    /**
     * organization identifier of the Repository Certificates.
     * 
     */
    @Import(name="orgId")
    private @Nullable String orgId;

    /**
     * @return organization identifier of the Repository Certificates.
     * 
     */
    public Optional<String> orgId() {
        return Optional.ofNullable(this.orgId);
    }

    /**
     * project identifier of the Repository Certificates.
     * 
     */
    @Import(name="projectId")
    private @Nullable String projectId;

    /**
     * @return project identifier of the Repository Certificates.
     * 
     */
    public Optional<String> projectId() {
        return Optional.ofNullable(this.projectId);
    }

    private GetGitopsRepoCertPlainArgs() {}

    private GetGitopsRepoCertPlainArgs(GetGitopsRepoCertPlainArgs $) {
        this.accountId = $.accountId;
        this.agentId = $.agentId;
        this.orgId = $.orgId;
        this.projectId = $.projectId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetGitopsRepoCertPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetGitopsRepoCertPlainArgs $;

        public Builder() {
            $ = new GetGitopsRepoCertPlainArgs();
        }

        public Builder(GetGitopsRepoCertPlainArgs defaults) {
            $ = new GetGitopsRepoCertPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param accountId account identifier of the Repository Certificates.
         * 
         * @return builder
         * 
         */
        public Builder accountId(String accountId) {
            $.accountId = accountId;
            return this;
        }

        /**
         * @param agentId agent identifier of the Repository Certificates.
         * 
         * @return builder
         * 
         */
        public Builder agentId(@Nullable String agentId) {
            $.agentId = agentId;
            return this;
        }

        /**
         * @param orgId organization identifier of the Repository Certificates.
         * 
         * @return builder
         * 
         */
        public Builder orgId(@Nullable String orgId) {
            $.orgId = orgId;
            return this;
        }

        /**
         * @param projectId project identifier of the Repository Certificates.
         * 
         * @return builder
         * 
         */
        public Builder projectId(@Nullable String projectId) {
            $.projectId = projectId;
            return this;
        }

        public GetGitopsRepoCertPlainArgs build() {
            if ($.accountId == null) {
                throw new MissingRequiredPropertyException("GetGitopsRepoCertPlainArgs", "accountId");
            }
            return $;
        }
    }

}
