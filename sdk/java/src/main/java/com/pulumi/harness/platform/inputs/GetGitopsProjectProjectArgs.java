// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.platform.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.harness.platform.inputs.GetGitopsProjectProjectMetadataArgs;
import com.pulumi.harness.platform.inputs.GetGitopsProjectProjectSpecArgs;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetGitopsProjectProjectArgs extends com.pulumi.resources.ResourceArgs {

    public static final GetGitopsProjectProjectArgs Empty = new GetGitopsProjectProjectArgs();

    /**
     * Metadata details that all persisted resources must have.
     * 
     */
    @Import(name="metadatas")
    private @Nullable Output<List<GetGitopsProjectProjectMetadataArgs>> metadatas;

    /**
     * @return Metadata details that all persisted resources must have.
     * 
     */
    public Optional<Output<List<GetGitopsProjectProjectMetadataArgs>>> metadatas() {
        return Optional.ofNullable(this.metadatas);
    }

    /**
     * Spec is the specification of an AppProject.
     * 
     */
    @Import(name="specs")
    private @Nullable Output<List<GetGitopsProjectProjectSpecArgs>> specs;

    /**
     * @return Spec is the specification of an AppProject.
     * 
     */
    public Optional<Output<List<GetGitopsProjectProjectSpecArgs>>> specs() {
        return Optional.ofNullable(this.specs);
    }

    private GetGitopsProjectProjectArgs() {}

    private GetGitopsProjectProjectArgs(GetGitopsProjectProjectArgs $) {
        this.metadatas = $.metadatas;
        this.specs = $.specs;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetGitopsProjectProjectArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetGitopsProjectProjectArgs $;

        public Builder() {
            $ = new GetGitopsProjectProjectArgs();
        }

        public Builder(GetGitopsProjectProjectArgs defaults) {
            $ = new GetGitopsProjectProjectArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param metadatas Metadata details that all persisted resources must have.
         * 
         * @return builder
         * 
         */
        public Builder metadatas(@Nullable Output<List<GetGitopsProjectProjectMetadataArgs>> metadatas) {
            $.metadatas = metadatas;
            return this;
        }

        /**
         * @param metadatas Metadata details that all persisted resources must have.
         * 
         * @return builder
         * 
         */
        public Builder metadatas(List<GetGitopsProjectProjectMetadataArgs> metadatas) {
            return metadatas(Output.of(metadatas));
        }

        /**
         * @param metadatas Metadata details that all persisted resources must have.
         * 
         * @return builder
         * 
         */
        public Builder metadatas(GetGitopsProjectProjectMetadataArgs... metadatas) {
            return metadatas(List.of(metadatas));
        }

        /**
         * @param specs Spec is the specification of an AppProject.
         * 
         * @return builder
         * 
         */
        public Builder specs(@Nullable Output<List<GetGitopsProjectProjectSpecArgs>> specs) {
            $.specs = specs;
            return this;
        }

        /**
         * @param specs Spec is the specification of an AppProject.
         * 
         * @return builder
         * 
         */
        public Builder specs(List<GetGitopsProjectProjectSpecArgs> specs) {
            return specs(Output.of(specs));
        }

        /**
         * @param specs Spec is the specification of an AppProject.
         * 
         * @return builder
         * 
         */
        public Builder specs(GetGitopsProjectProjectSpecArgs... specs) {
            return specs(List.of(specs));
        }

        public GetGitopsProjectProjectArgs build() {
            return $;
        }
    }

}
