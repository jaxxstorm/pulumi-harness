// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.platform.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.harness.platform.outputs.GetHarRegistryConfig;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetHarRegistryResult {
    private @Nullable List<String> allowedPatterns;
    private @Nullable List<String> blockedPatterns;
    private @Nullable List<GetHarRegistryConfig> configs;
    private String createdAt;
    private @Nullable String description;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return Unique identifier of the resource.
     * 
     */
    private String identifier;
    private @Nullable String packageType;
    private @Nullable String parentRef;
    /**
     * @return Reference of the space.
     * 
     */
    private String spaceRef;
    private String url;

    private GetHarRegistryResult() {}
    public List<String> allowedPatterns() {
        return this.allowedPatterns == null ? List.of() : this.allowedPatterns;
    }
    public List<String> blockedPatterns() {
        return this.blockedPatterns == null ? List.of() : this.blockedPatterns;
    }
    public List<GetHarRegistryConfig> configs() {
        return this.configs == null ? List.of() : this.configs;
    }
    public String createdAt() {
        return this.createdAt;
    }
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Unique identifier of the resource.
     * 
     */
    public String identifier() {
        return this.identifier;
    }
    public Optional<String> packageType() {
        return Optional.ofNullable(this.packageType);
    }
    public Optional<String> parentRef() {
        return Optional.ofNullable(this.parentRef);
    }
    /**
     * @return Reference of the space.
     * 
     */
    public String spaceRef() {
        return this.spaceRef;
    }
    public String url() {
        return this.url;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetHarRegistryResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<String> allowedPatterns;
        private @Nullable List<String> blockedPatterns;
        private @Nullable List<GetHarRegistryConfig> configs;
        private String createdAt;
        private @Nullable String description;
        private String id;
        private String identifier;
        private @Nullable String packageType;
        private @Nullable String parentRef;
        private String spaceRef;
        private String url;
        public Builder() {}
        public Builder(GetHarRegistryResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.allowedPatterns = defaults.allowedPatterns;
    	      this.blockedPatterns = defaults.blockedPatterns;
    	      this.configs = defaults.configs;
    	      this.createdAt = defaults.createdAt;
    	      this.description = defaults.description;
    	      this.id = defaults.id;
    	      this.identifier = defaults.identifier;
    	      this.packageType = defaults.packageType;
    	      this.parentRef = defaults.parentRef;
    	      this.spaceRef = defaults.spaceRef;
    	      this.url = defaults.url;
        }

        @CustomType.Setter
        public Builder allowedPatterns(@Nullable List<String> allowedPatterns) {

            this.allowedPatterns = allowedPatterns;
            return this;
        }
        public Builder allowedPatterns(String... allowedPatterns) {
            return allowedPatterns(List.of(allowedPatterns));
        }
        @CustomType.Setter
        public Builder blockedPatterns(@Nullable List<String> blockedPatterns) {

            this.blockedPatterns = blockedPatterns;
            return this;
        }
        public Builder blockedPatterns(String... blockedPatterns) {
            return blockedPatterns(List.of(blockedPatterns));
        }
        @CustomType.Setter
        public Builder configs(@Nullable List<GetHarRegistryConfig> configs) {

            this.configs = configs;
            return this;
        }
        public Builder configs(GetHarRegistryConfig... configs) {
            return configs(List.of(configs));
        }
        @CustomType.Setter
        public Builder createdAt(String createdAt) {
            if (createdAt == null) {
              throw new MissingRequiredPropertyException("GetHarRegistryResult", "createdAt");
            }
            this.createdAt = createdAt;
            return this;
        }
        @CustomType.Setter
        public Builder description(@Nullable String description) {

            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetHarRegistryResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder identifier(String identifier) {
            if (identifier == null) {
              throw new MissingRequiredPropertyException("GetHarRegistryResult", "identifier");
            }
            this.identifier = identifier;
            return this;
        }
        @CustomType.Setter
        public Builder packageType(@Nullable String packageType) {

            this.packageType = packageType;
            return this;
        }
        @CustomType.Setter
        public Builder parentRef(@Nullable String parentRef) {

            this.parentRef = parentRef;
            return this;
        }
        @CustomType.Setter
        public Builder spaceRef(String spaceRef) {
            if (spaceRef == null) {
              throw new MissingRequiredPropertyException("GetHarRegistryResult", "spaceRef");
            }
            this.spaceRef = spaceRef;
            return this;
        }
        @CustomType.Setter
        public Builder url(String url) {
            if (url == null) {
              throw new MissingRequiredPropertyException("GetHarRegistryResult", "url");
            }
            this.url = url;
            return this;
        }
        public GetHarRegistryResult build() {
            final var _resultValue = new GetHarRegistryResult();
            _resultValue.allowedPatterns = allowedPatterns;
            _resultValue.blockedPatterns = blockedPatterns;
            _resultValue.configs = configs;
            _resultValue.createdAt = createdAt;
            _resultValue.description = description;
            _resultValue.id = id;
            _resultValue.identifier = identifier;
            _resultValue.packageType = packageType;
            _resultValue.parentRef = parentRef;
            _resultValue.spaceRef = spaceRef;
            _resultValue.url = url;
            return _resultValue;
        }
    }
}
