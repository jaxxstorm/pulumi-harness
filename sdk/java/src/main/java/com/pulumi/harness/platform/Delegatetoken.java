// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.platform;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.harness.Utilities;
import com.pulumi.harness.platform.DelegatetokenArgs;
import com.pulumi.harness.platform.inputs.DelegatetokenState;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Resource for creating delegate tokens.
 * 
 * ## Import
 * 
 * Import account level delegate token
 * 
 * ```sh
 * $ pulumi import harness:platform/delegatetoken:Delegatetoken harness_platform_delegatetoken &lt;token_id&gt;
 * ```
 * 
 * Import org level delegate token
 * 
 * ```sh
 * $ pulumi import harness:platform/delegatetoken:Delegatetoken harness_platform_delegatetoken &lt;org_id&gt;/&lt;token_id&gt;
 * ```
 * 
 * Import project level delegate token
 * 
 * ```sh
 * $ pulumi import harness:platform/delegatetoken:Delegatetoken harness_platform_delegatetoken &lt;org_id&gt;/&lt;project_id&gt;/&lt;token_id&gt;
 * ```
 * 
 */
@ResourceType(type="harness:platform/delegatetoken:Delegatetoken")
public class Delegatetoken extends com.pulumi.resources.CustomResource {
    /**
     * Account Identifier for the Entity
     * 
     */
    @Export(name="accountId", refs={String.class}, tree="[0]")
    private Output<String> accountId;

    /**
     * @return Account Identifier for the Entity
     * 
     */
    public Output<String> accountId() {
        return this.accountId;
    }
    /**
     * Time when the delegate token is created.
     * 
     */
    @Export(name="createdAt", refs={Integer.class}, tree="[0]")
    private Output<Integer> createdAt;

    /**
     * @return Time when the delegate token is created.
     * 
     */
    public Output<Integer> createdAt() {
        return this.createdAt;
    }
    /**
     * created by details.
     * 
     */
    @Export(name="createdBy", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output<Map<String,String>> createdBy;

    /**
     * @return created by details.
     * 
     */
    public Output<Map<String,String>> createdBy() {
        return this.createdBy;
    }
    /**
     * Name of the resource.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return Name of the resource.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Unique identifier of the organization.
     * 
     */
    @Export(name="orgId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> orgId;

    /**
     * @return Unique identifier of the organization.
     * 
     */
    public Output<Optional<String>> orgId() {
        return Codegen.optional(this.orgId);
    }
    /**
     * Unique identifier of the project.
     * 
     */
    @Export(name="projectId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> projectId;

    /**
     * @return Unique identifier of the project.
     * 
     */
    public Output<Optional<String>> projectId() {
        return Codegen.optional(this.projectId);
    }
    /**
     * Status of Delegate Token (ACTIVE or REVOKED). If left empty both active and revoked tokens will be assumed.
     * 
     */
    @Export(name="tokenStatus", refs={String.class}, tree="[0]")
    private Output<String> tokenStatus;

    /**
     * @return Status of Delegate Token (ACTIVE or REVOKED). If left empty both active and revoked tokens will be assumed.
     * 
     */
    public Output<String> tokenStatus() {
        return this.tokenStatus;
    }
    /**
     * Value of the delegate Token
     * 
     */
    @Export(name="value", refs={String.class}, tree="[0]")
    private Output<String> value;

    /**
     * @return Value of the delegate Token
     * 
     */
    public Output<String> value() {
        return this.value;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Delegatetoken(java.lang.String name) {
        this(name, DelegatetokenArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Delegatetoken(java.lang.String name, DelegatetokenArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Delegatetoken(java.lang.String name, DelegatetokenArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("harness:platform/delegatetoken:Delegatetoken", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private Delegatetoken(java.lang.String name, Output<java.lang.String> id, @Nullable DelegatetokenState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("harness:platform/delegatetoken:Delegatetoken", name, state, makeResourceOptions(options, id), false);
    }

    private static DelegatetokenArgs makeArgs(DelegatetokenArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? DelegatetokenArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Delegatetoken get(java.lang.String name, Output<java.lang.String> id, @Nullable DelegatetokenState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Delegatetoken(name, id, state, options);
    }
}
