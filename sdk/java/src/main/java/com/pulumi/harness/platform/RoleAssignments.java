// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.platform;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.harness.Utilities;
import com.pulumi.harness.platform.RoleAssignmentsArgs;
import com.pulumi.harness.platform.inputs.RoleAssignmentsState;
import com.pulumi.harness.platform.outputs.RoleAssignmentsPrincipal;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * ## Example Usage
 * 
 * ## Import
 * 
 * Import account level role assignments
 * 
 * ```sh
 * $ pulumi import harness:platform/roleAssignments:RoleAssignments example &lt;role_assignments_id&gt;
 * ```
 * 
 * Import org level role assignments
 * 
 * ```sh
 * $ pulumi import harness:platform/roleAssignments:RoleAssignments example &lt;ord_id&gt;/&lt;role_assignments_id&gt;
 * ```
 * 
 * Import project level role assignments
 * 
 * ```sh
 * $ pulumi import harness:platform/roleAssignments:RoleAssignments example &lt;org_id&gt;/&lt;project_id&gt;/&lt;role_assignments_id&gt;
 * ```
 * 
 */
@ResourceType(type="harness:platform/roleAssignments:RoleAssignments")
public class RoleAssignments extends com.pulumi.resources.CustomResource {
    /**
     * The `disabled` attribute in the role assignment resource controls the status of the role assignment. Setting `disabled` to `false` activates the role and its permissions, enabling the assigned entity to perform allowed actions. Conversely, setting `disabled` to `true` deactivates the role, revoking the entity&#39;s permissions and action capabilities. Default value should be `false`.
     * 
     */
    @Export(name="disabled", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> disabled;

    /**
     * @return The `disabled` attribute in the role assignment resource controls the status of the role assignment. Setting `disabled` to `false` activates the role and its permissions, enabling the assigned entity to perform allowed actions. Conversely, setting `disabled` to `true` deactivates the role, revoking the entity&#39;s permissions and action capabilities. Default value should be `false`.
     * 
     */
    public Output<Optional<Boolean>> disabled() {
        return Codegen.optional(this.disabled);
    }
    /**
     * Identifier for role assignment.
     * 
     */
    @Export(name="identifier", refs={String.class}, tree="[0]")
    private Output<String> identifier;

    /**
     * @return Identifier for role assignment.
     * 
     */
    public Output<String> identifier() {
        return this.identifier;
    }
    /**
     * Specifies whether the role assignment is managed by Harness. Setting managed to `true` means that Harness will manage the lifecycle of the role assignment, including its creation, updates, and deletion. Conversely, setting it to `false` indicates that the role assignment is not managed by Harness, and thus Harness will not perform actions on it. Default value should be `false`.
     * 
     */
    @Export(name="managed", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> managed;

    /**
     * @return Specifies whether the role assignment is managed by Harness. Setting managed to `true` means that Harness will manage the lifecycle of the role assignment, including its creation, updates, and deletion. Conversely, setting it to `false` indicates that the role assignment is not managed by Harness, and thus Harness will not perform actions on it. Default value should be `false`.
     * 
     */
    public Output<Optional<Boolean>> managed() {
        return Codegen.optional(this.managed);
    }
    /**
     * Org identifier.
     * 
     */
    @Export(name="orgId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> orgId;

    /**
     * @return Org identifier.
     * 
     */
    public Output<Optional<String>> orgId() {
        return Codegen.optional(this.orgId);
    }
    /**
     * Principal.
     * 
     */
    @Export(name="principals", refs={List.class,RoleAssignmentsPrincipal.class}, tree="[0,1]")
    private Output<List<RoleAssignmentsPrincipal>> principals;

    /**
     * @return Principal.
     * 
     */
    public Output<List<RoleAssignmentsPrincipal>> principals() {
        return this.principals;
    }
    /**
     * Project Identifier
     * 
     */
    @Export(name="projectId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> projectId;

    /**
     * @return Project Identifier
     * 
     */
    public Output<Optional<String>> projectId() {
        return Codegen.optional(this.projectId);
    }
    /**
     * Resource group identifier.
     * 
     */
    @Export(name="resourceGroupIdentifier", refs={String.class}, tree="[0]")
    private Output<String> resourceGroupIdentifier;

    /**
     * @return Resource group identifier.
     * 
     */
    public Output<String> resourceGroupIdentifier() {
        return this.resourceGroupIdentifier;
    }
    /**
     * Role identifier.
     * 
     */
    @Export(name="roleIdentifier", refs={String.class}, tree="[0]")
    private Output<String> roleIdentifier;

    /**
     * @return Role identifier.
     * 
     */
    public Output<String> roleIdentifier() {
        return this.roleIdentifier;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public RoleAssignments(java.lang.String name) {
        this(name, RoleAssignmentsArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public RoleAssignments(java.lang.String name, RoleAssignmentsArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public RoleAssignments(java.lang.String name, RoleAssignmentsArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("harness:platform/roleAssignments:RoleAssignments", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private RoleAssignments(java.lang.String name, Output<java.lang.String> id, @Nullable RoleAssignmentsState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("harness:platform/roleAssignments:RoleAssignments", name, state, makeResourceOptions(options, id), false);
    }

    private static RoleAssignmentsArgs makeArgs(RoleAssignmentsArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? RoleAssignmentsArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .pluginDownloadURL("github://api.github.com/pulumi")
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static RoleAssignments get(java.lang.String name, Output<java.lang.String> id, @Nullable RoleAssignmentsState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new RoleAssignments(name, id, state, options);
    }
}
