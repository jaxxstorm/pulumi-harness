// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.platform.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.harness.platform.inputs.GetGitopsProjectProjectSpecClusterResourceWhitelist;
import com.pulumi.harness.platform.inputs.GetGitopsProjectProjectSpecDestination;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetGitopsProjectProjectSpec extends com.pulumi.resources.InvokeArgs {

    public static final GetGitopsProjectProjectSpec Empty = new GetGitopsProjectProjectSpec();

    /**
     * ClusterResourceWhitelist contains list of whitelisted cluster level resources.
     * 
     */
    @Import(name="clusterResourceWhitelists")
    private @Nullable List<GetGitopsProjectProjectSpecClusterResourceWhitelist> clusterResourceWhitelists;

    /**
     * @return ClusterResourceWhitelist contains list of whitelisted cluster level resources.
     * 
     */
    public Optional<List<GetGitopsProjectProjectSpecClusterResourceWhitelist>> clusterResourceWhitelists() {
        return Optional.ofNullable(this.clusterResourceWhitelists);
    }

    /**
     * Destinations contains list of destinations available for deployment.
     * 
     */
    @Import(name="destinations")
    private @Nullable List<GetGitopsProjectProjectSpecDestination> destinations;

    /**
     * @return Destinations contains list of destinations available for deployment.
     * 
     */
    public Optional<List<GetGitopsProjectProjectSpecDestination>> destinations() {
        return Optional.ofNullable(this.destinations);
    }

    /**
     * SourceRepos contains list of repository URLs which can be used for deployment.
     * 
     */
    @Import(name="sourceRepos")
    private @Nullable List<String> sourceRepos;

    /**
     * @return SourceRepos contains list of repository URLs which can be used for deployment.
     * 
     */
    public Optional<List<String>> sourceRepos() {
        return Optional.ofNullable(this.sourceRepos);
    }

    private GetGitopsProjectProjectSpec() {}

    private GetGitopsProjectProjectSpec(GetGitopsProjectProjectSpec $) {
        this.clusterResourceWhitelists = $.clusterResourceWhitelists;
        this.destinations = $.destinations;
        this.sourceRepos = $.sourceRepos;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetGitopsProjectProjectSpec defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetGitopsProjectProjectSpec $;

        public Builder() {
            $ = new GetGitopsProjectProjectSpec();
        }

        public Builder(GetGitopsProjectProjectSpec defaults) {
            $ = new GetGitopsProjectProjectSpec(Objects.requireNonNull(defaults));
        }

        /**
         * @param clusterResourceWhitelists ClusterResourceWhitelist contains list of whitelisted cluster level resources.
         * 
         * @return builder
         * 
         */
        public Builder clusterResourceWhitelists(@Nullable List<GetGitopsProjectProjectSpecClusterResourceWhitelist> clusterResourceWhitelists) {
            $.clusterResourceWhitelists = clusterResourceWhitelists;
            return this;
        }

        /**
         * @param clusterResourceWhitelists ClusterResourceWhitelist contains list of whitelisted cluster level resources.
         * 
         * @return builder
         * 
         */
        public Builder clusterResourceWhitelists(GetGitopsProjectProjectSpecClusterResourceWhitelist... clusterResourceWhitelists) {
            return clusterResourceWhitelists(List.of(clusterResourceWhitelists));
        }

        /**
         * @param destinations Destinations contains list of destinations available for deployment.
         * 
         * @return builder
         * 
         */
        public Builder destinations(@Nullable List<GetGitopsProjectProjectSpecDestination> destinations) {
            $.destinations = destinations;
            return this;
        }

        /**
         * @param destinations Destinations contains list of destinations available for deployment.
         * 
         * @return builder
         * 
         */
        public Builder destinations(GetGitopsProjectProjectSpecDestination... destinations) {
            return destinations(List.of(destinations));
        }

        /**
         * @param sourceRepos SourceRepos contains list of repository URLs which can be used for deployment.
         * 
         * @return builder
         * 
         */
        public Builder sourceRepos(@Nullable List<String> sourceRepos) {
            $.sourceRepos = sourceRepos;
            return this;
        }

        /**
         * @param sourceRepos SourceRepos contains list of repository URLs which can be used for deployment.
         * 
         * @return builder
         * 
         */
        public Builder sourceRepos(String... sourceRepos) {
            return sourceRepos(List.of(sourceRepos));
        }

        public GetGitopsProjectProjectSpec build() {
            return $;
        }
    }

}
