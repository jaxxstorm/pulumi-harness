// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.platform.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class AwsSecretManagerConnectorCredentialsManualArgs extends com.pulumi.resources.ResourceArgs {

    public static final AwsSecretManagerConnectorCredentialsManualArgs Empty = new AwsSecretManagerConnectorCredentialsManualArgs();

    /**
     * The reference to the Harness secret containing the AWS access key. To reference a secret at the organization scope, prefix &#39;org&#39; to the expression: org.{identifier}. To reference a secret at the account scope, prefix &#39;account` to the expression: account.{identifier}.
     * 
     */
    @Import(name="accessKeyRef", required=true)
    private Output<String> accessKeyRef;

    /**
     * @return The reference to the Harness secret containing the AWS access key. To reference a secret at the organization scope, prefix &#39;org&#39; to the expression: org.{identifier}. To reference a secret at the account scope, prefix &#39;account` to the expression: account.{identifier}.
     * 
     */
    public Output<String> accessKeyRef() {
        return this.accessKeyRef;
    }

    /**
     * The reference to the Harness secret containing the AWS secret key. To reference a secret at the organization scope, prefix &#39;org&#39; to the expression: org.{identifier}. To reference a secret at the account scope, prefix &#39;account` to the expression: account.{identifier}.
     * 
     */
    @Import(name="secretKeyRef", required=true)
    private Output<String> secretKeyRef;

    /**
     * @return The reference to the Harness secret containing the AWS secret key. To reference a secret at the organization scope, prefix &#39;org&#39; to the expression: org.{identifier}. To reference a secret at the account scope, prefix &#39;account` to the expression: account.{identifier}.
     * 
     */
    public Output<String> secretKeyRef() {
        return this.secretKeyRef;
    }

    private AwsSecretManagerConnectorCredentialsManualArgs() {}

    private AwsSecretManagerConnectorCredentialsManualArgs(AwsSecretManagerConnectorCredentialsManualArgs $) {
        this.accessKeyRef = $.accessKeyRef;
        this.secretKeyRef = $.secretKeyRef;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AwsSecretManagerConnectorCredentialsManualArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AwsSecretManagerConnectorCredentialsManualArgs $;

        public Builder() {
            $ = new AwsSecretManagerConnectorCredentialsManualArgs();
        }

        public Builder(AwsSecretManagerConnectorCredentialsManualArgs defaults) {
            $ = new AwsSecretManagerConnectorCredentialsManualArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param accessKeyRef The reference to the Harness secret containing the AWS access key. To reference a secret at the organization scope, prefix &#39;org&#39; to the expression: org.{identifier}. To reference a secret at the account scope, prefix &#39;account` to the expression: account.{identifier}.
         * 
         * @return builder
         * 
         */
        public Builder accessKeyRef(Output<String> accessKeyRef) {
            $.accessKeyRef = accessKeyRef;
            return this;
        }

        /**
         * @param accessKeyRef The reference to the Harness secret containing the AWS access key. To reference a secret at the organization scope, prefix &#39;org&#39; to the expression: org.{identifier}. To reference a secret at the account scope, prefix &#39;account` to the expression: account.{identifier}.
         * 
         * @return builder
         * 
         */
        public Builder accessKeyRef(String accessKeyRef) {
            return accessKeyRef(Output.of(accessKeyRef));
        }

        /**
         * @param secretKeyRef The reference to the Harness secret containing the AWS secret key. To reference a secret at the organization scope, prefix &#39;org&#39; to the expression: org.{identifier}. To reference a secret at the account scope, prefix &#39;account` to the expression: account.{identifier}.
         * 
         * @return builder
         * 
         */
        public Builder secretKeyRef(Output<String> secretKeyRef) {
            $.secretKeyRef = secretKeyRef;
            return this;
        }

        /**
         * @param secretKeyRef The reference to the Harness secret containing the AWS secret key. To reference a secret at the organization scope, prefix &#39;org&#39; to the expression: org.{identifier}. To reference a secret at the account scope, prefix &#39;account` to the expression: account.{identifier}.
         * 
         * @return builder
         * 
         */
        public Builder secretKeyRef(String secretKeyRef) {
            return secretKeyRef(Output.of(secretKeyRef));
        }

        public AwsSecretManagerConnectorCredentialsManualArgs build() {
            if ($.accessKeyRef == null) {
                throw new MissingRequiredPropertyException("AwsSecretManagerConnectorCredentialsManualArgs", "accessKeyRef");
            }
            if ($.secretKeyRef == null) {
                throw new MissingRequiredPropertyException("AwsSecretManagerConnectorCredentialsManualArgs", "secretKeyRef");
            }
            return $;
        }
    }

}
