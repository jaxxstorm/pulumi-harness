// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.platform.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class FeatureFlagGitDetailsArgs extends com.pulumi.resources.ResourceArgs {

    public static final FeatureFlagGitDetailsArgs Empty = new FeatureFlagGitDetailsArgs();

    /**
     * The commit message to use as part of a gitsync operation
     * 
     */
    @Import(name="commitMsg", required=true)
    private Output<String> commitMsg;

    /**
     * @return The commit message to use as part of a gitsync operation
     * 
     */
    public Output<String> commitMsg() {
        return this.commitMsg;
    }

    private FeatureFlagGitDetailsArgs() {}

    private FeatureFlagGitDetailsArgs(FeatureFlagGitDetailsArgs $) {
        this.commitMsg = $.commitMsg;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FeatureFlagGitDetailsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FeatureFlagGitDetailsArgs $;

        public Builder() {
            $ = new FeatureFlagGitDetailsArgs();
        }

        public Builder(FeatureFlagGitDetailsArgs defaults) {
            $ = new FeatureFlagGitDetailsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param commitMsg The commit message to use as part of a gitsync operation
         * 
         * @return builder
         * 
         */
        public Builder commitMsg(Output<String> commitMsg) {
            $.commitMsg = commitMsg;
            return this;
        }

        /**
         * @param commitMsg The commit message to use as part of a gitsync operation
         * 
         * @return builder
         * 
         */
        public Builder commitMsg(String commitMsg) {
            return commitMsg(Output.of(commitMsg));
        }

        public FeatureFlagGitDetailsArgs build() {
            if ($.commitMsg == null) {
                throw new MissingRequiredPropertyException("FeatureFlagGitDetailsArgs", "commitMsg");
            }
            return $;
        }
    }

}
