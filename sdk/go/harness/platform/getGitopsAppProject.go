// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package platform

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-harness/sdk/go/harness/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupGitopsAppProject(ctx *pulumi.Context, args *LookupGitopsAppProjectArgs, opts ...pulumi.InvokeOption) (*LookupGitopsAppProjectResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupGitopsAppProjectResult
	err := ctx.Invoke("harness:platform/getGitopsAppProject:getGitopsAppProject", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getGitopsAppProject.
type LookupGitopsAppProjectArgs struct {
	AccountId string  `pulumi:"accountId"`
	AgentId   string  `pulumi:"agentId"`
	OrgId     *string `pulumi:"orgId"`
	ProjectId *string `pulumi:"projectId"`
	QueryName *string `pulumi:"queryName"`
}

// A collection of values returned by getGitopsAppProject.
type LookupGitopsAppProjectResult struct {
	AccountId string `pulumi:"accountId"`
	AgentId   string `pulumi:"agentId"`
	// The provider-assigned unique ID for this managed resource.
	Id        string  `pulumi:"id"`
	OrgId     *string `pulumi:"orgId"`
	ProjectId *string `pulumi:"projectId"`
	QueryName string  `pulumi:"queryName"`
}

func LookupGitopsAppProjectOutput(ctx *pulumi.Context, args LookupGitopsAppProjectOutputArgs, opts ...pulumi.InvokeOption) LookupGitopsAppProjectResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupGitopsAppProjectResult, error) {
			args := v.(LookupGitopsAppProjectArgs)
			r, err := LookupGitopsAppProject(ctx, &args, opts...)
			var s LookupGitopsAppProjectResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupGitopsAppProjectResultOutput)
}

// A collection of arguments for invoking getGitopsAppProject.
type LookupGitopsAppProjectOutputArgs struct {
	AccountId pulumi.StringInput    `pulumi:"accountId"`
	AgentId   pulumi.StringInput    `pulumi:"agentId"`
	OrgId     pulumi.StringPtrInput `pulumi:"orgId"`
	ProjectId pulumi.StringPtrInput `pulumi:"projectId"`
	QueryName pulumi.StringPtrInput `pulumi:"queryName"`
}

func (LookupGitopsAppProjectOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupGitopsAppProjectArgs)(nil)).Elem()
}

// A collection of values returned by getGitopsAppProject.
type LookupGitopsAppProjectResultOutput struct{ *pulumi.OutputState }

func (LookupGitopsAppProjectResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupGitopsAppProjectResult)(nil)).Elem()
}

func (o LookupGitopsAppProjectResultOutput) ToLookupGitopsAppProjectResultOutput() LookupGitopsAppProjectResultOutput {
	return o
}

func (o LookupGitopsAppProjectResultOutput) ToLookupGitopsAppProjectResultOutputWithContext(ctx context.Context) LookupGitopsAppProjectResultOutput {
	return o
}

func (o LookupGitopsAppProjectResultOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupGitopsAppProjectResult) string { return v.AccountId }).(pulumi.StringOutput)
}

func (o LookupGitopsAppProjectResultOutput) AgentId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupGitopsAppProjectResult) string { return v.AgentId }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupGitopsAppProjectResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupGitopsAppProjectResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupGitopsAppProjectResultOutput) OrgId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupGitopsAppProjectResult) *string { return v.OrgId }).(pulumi.StringPtrOutput)
}

func (o LookupGitopsAppProjectResultOutput) ProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupGitopsAppProjectResult) *string { return v.ProjectId }).(pulumi.StringPtrOutput)
}

func (o LookupGitopsAppProjectResultOutput) QueryName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupGitopsAppProjectResult) string { return v.QueryName }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupGitopsAppProjectResultOutput{})
}
