// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package platform

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-harness/sdk/go/harness/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Datasource for fetching a Harness Gitops Agents.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-harness/sdk/go/harness/platform"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := platform.GetGitopsAgentDeployYaml(ctx, &platform.GetGitopsAgentDeployYamlArgs{
//				Identifier: "identifier",
//				AccountId:  "account_id",
//				ProjectId:  pulumi.StringRef("project_id"),
//				OrgId:      pulumi.StringRef("org_id"),
//				Namespace:  "namespace",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetGitopsAgentDeployYaml(ctx *pulumi.Context, args *GetGitopsAgentDeployYamlArgs, opts ...pulumi.InvokeOption) (*GetGitopsAgentDeployYamlResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetGitopsAgentDeployYamlResult
	err := ctx.Invoke("harness:platform/getGitopsAgentDeployYaml:getGitopsAgentDeployYaml", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getGitopsAgentDeployYaml.
type GetGitopsAgentDeployYamlArgs struct {
	// Account identifier of the GitOps agent.
	AccountId string `pulumi:"accountId"`
	// Identifier of the GitOps agent.
	Identifier string `pulumi:"identifier"`
	// The k8s namespace that the GitOps agent resides in.
	Namespace string `pulumi:"namespace"`
	// Organization identifier of the GitOps agent.
	OrgId *string `pulumi:"orgId"`
	// Project identifier of the GitOps agent.
	ProjectId *string `pulumi:"projectId"`
}

// A collection of values returned by getGitopsAgentDeployYaml.
type GetGitopsAgentDeployYamlResult struct {
	// Account identifier of the GitOps agent.
	AccountId string `pulumi:"accountId"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Identifier of the GitOps agent.
	Identifier string `pulumi:"identifier"`
	// The k8s namespace that the GitOps agent resides in.
	Namespace string `pulumi:"namespace"`
	// Organization identifier of the GitOps agent.
	OrgId *string `pulumi:"orgId"`
	// Project identifier of the GitOps agent.
	ProjectId *string `pulumi:"projectId"`
	// Deployment YAML of the GitOps agent.
	Yaml string `pulumi:"yaml"`
}

func GetGitopsAgentDeployYamlOutput(ctx *pulumi.Context, args GetGitopsAgentDeployYamlOutputArgs, opts ...pulumi.InvokeOption) GetGitopsAgentDeployYamlResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetGitopsAgentDeployYamlResult, error) {
			args := v.(GetGitopsAgentDeployYamlArgs)
			r, err := GetGitopsAgentDeployYaml(ctx, &args, opts...)
			var s GetGitopsAgentDeployYamlResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetGitopsAgentDeployYamlResultOutput)
}

// A collection of arguments for invoking getGitopsAgentDeployYaml.
type GetGitopsAgentDeployYamlOutputArgs struct {
	// Account identifier of the GitOps agent.
	AccountId pulumi.StringInput `pulumi:"accountId"`
	// Identifier of the GitOps agent.
	Identifier pulumi.StringInput `pulumi:"identifier"`
	// The k8s namespace that the GitOps agent resides in.
	Namespace pulumi.StringInput `pulumi:"namespace"`
	// Organization identifier of the GitOps agent.
	OrgId pulumi.StringPtrInput `pulumi:"orgId"`
	// Project identifier of the GitOps agent.
	ProjectId pulumi.StringPtrInput `pulumi:"projectId"`
}

func (GetGitopsAgentDeployYamlOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitopsAgentDeployYamlArgs)(nil)).Elem()
}

// A collection of values returned by getGitopsAgentDeployYaml.
type GetGitopsAgentDeployYamlResultOutput struct{ *pulumi.OutputState }

func (GetGitopsAgentDeployYamlResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitopsAgentDeployYamlResult)(nil)).Elem()
}

func (o GetGitopsAgentDeployYamlResultOutput) ToGetGitopsAgentDeployYamlResultOutput() GetGitopsAgentDeployYamlResultOutput {
	return o
}

func (o GetGitopsAgentDeployYamlResultOutput) ToGetGitopsAgentDeployYamlResultOutputWithContext(ctx context.Context) GetGitopsAgentDeployYamlResultOutput {
	return o
}

// Account identifier of the GitOps agent.
func (o GetGitopsAgentDeployYamlResultOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v GetGitopsAgentDeployYamlResult) string { return v.AccountId }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetGitopsAgentDeployYamlResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetGitopsAgentDeployYamlResult) string { return v.Id }).(pulumi.StringOutput)
}

// Identifier of the GitOps agent.
func (o GetGitopsAgentDeployYamlResultOutput) Identifier() pulumi.StringOutput {
	return o.ApplyT(func(v GetGitopsAgentDeployYamlResult) string { return v.Identifier }).(pulumi.StringOutput)
}

// The k8s namespace that the GitOps agent resides in.
func (o GetGitopsAgentDeployYamlResultOutput) Namespace() pulumi.StringOutput {
	return o.ApplyT(func(v GetGitopsAgentDeployYamlResult) string { return v.Namespace }).(pulumi.StringOutput)
}

// Organization identifier of the GitOps agent.
func (o GetGitopsAgentDeployYamlResultOutput) OrgId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGitopsAgentDeployYamlResult) *string { return v.OrgId }).(pulumi.StringPtrOutput)
}

// Project identifier of the GitOps agent.
func (o GetGitopsAgentDeployYamlResultOutput) ProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGitopsAgentDeployYamlResult) *string { return v.ProjectId }).(pulumi.StringPtrOutput)
}

// Deployment YAML of the GitOps agent.
func (o GetGitopsAgentDeployYamlResultOutput) Yaml() pulumi.StringOutput {
	return o.ApplyT(func(v GetGitopsAgentDeployYamlResult) string { return v.Yaml }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetGitopsAgentDeployYamlResultOutput{})
}
