// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package platform

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-harness/sdk/go/harness/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Datasource for fetching a Harness Gitops Agents.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-harness/sdk/go/harness/platform"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := platform.GetGitopsAgent(ctx, &platform.GetGitopsAgentArgs{
//				Identifier: "identifier",
//				AccountId:  "account_id",
//				ProjectId:  pulumi.StringRef("project_id"),
//				OrgId:      pulumi.StringRef("org_id"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetGitopsAgent(ctx *pulumi.Context, args *GetGitopsAgentArgs, opts ...pulumi.InvokeOption) (*GetGitopsAgentResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetGitopsAgentResult
	err := ctx.Invoke("harness:platform/getGitopsAgent:getGitopsAgent", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getGitopsAgent.
type GetGitopsAgentArgs struct {
	// Account identifier of the GitOps agent.
	AccountId string `pulumi:"accountId"`
	// Identifier of the GitOps agent.
	Identifier string `pulumi:"identifier"`
	// Organization identifier of the GitOps agent.
	OrgId *string `pulumi:"orgId"`
	// Project identifier of the GitOps agent.
	ProjectId *string `pulumi:"projectId"`
}

// A collection of values returned by getGitopsAgent.
type GetGitopsAgentResult struct {
	// Account identifier of the GitOps agent.
	AccountId string `pulumi:"accountId"`
	// Description of the GitOps agent.
	Description string `pulumi:"description"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Identifier of the GitOps agent.
	Identifier string `pulumi:"identifier"`
	// Metadata of the agent.
	Metadatas []GetGitopsAgentMetadata `pulumi:"metadatas"`
	// Name of the GitOps agent.
	Name string `pulumi:"name"`
	// Organization identifier of the GitOps agent.
	OrgId *string `pulumi:"orgId"`
	// Project identifier of the GitOps agent.
	ProjectId *string `pulumi:"projectId"`
	// Tags for the GitOps agents. These can be used to search or filter the GitOps agents.
	Tags map[string]string `pulumi:"tags"`
	// Default: "AGENT*TYPE*UNSET"
	// Enum: "AGENT*TYPE*UNSET" "CONNECTED*ARGO*PROVIDER" "MANAGED*ARGO*PROVIDER"
	Type string `pulumi:"type"`
}

func GetGitopsAgentOutput(ctx *pulumi.Context, args GetGitopsAgentOutputArgs, opts ...pulumi.InvokeOption) GetGitopsAgentResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetGitopsAgentResult, error) {
			args := v.(GetGitopsAgentArgs)
			r, err := GetGitopsAgent(ctx, &args, opts...)
			var s GetGitopsAgentResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetGitopsAgentResultOutput)
}

// A collection of arguments for invoking getGitopsAgent.
type GetGitopsAgentOutputArgs struct {
	// Account identifier of the GitOps agent.
	AccountId pulumi.StringInput `pulumi:"accountId"`
	// Identifier of the GitOps agent.
	Identifier pulumi.StringInput `pulumi:"identifier"`
	// Organization identifier of the GitOps agent.
	OrgId pulumi.StringPtrInput `pulumi:"orgId"`
	// Project identifier of the GitOps agent.
	ProjectId pulumi.StringPtrInput `pulumi:"projectId"`
}

func (GetGitopsAgentOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitopsAgentArgs)(nil)).Elem()
}

// A collection of values returned by getGitopsAgent.
type GetGitopsAgentResultOutput struct{ *pulumi.OutputState }

func (GetGitopsAgentResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitopsAgentResult)(nil)).Elem()
}

func (o GetGitopsAgentResultOutput) ToGetGitopsAgentResultOutput() GetGitopsAgentResultOutput {
	return o
}

func (o GetGitopsAgentResultOutput) ToGetGitopsAgentResultOutputWithContext(ctx context.Context) GetGitopsAgentResultOutput {
	return o
}

// Account identifier of the GitOps agent.
func (o GetGitopsAgentResultOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v GetGitopsAgentResult) string { return v.AccountId }).(pulumi.StringOutput)
}

// Description of the GitOps agent.
func (o GetGitopsAgentResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetGitopsAgentResult) string { return v.Description }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetGitopsAgentResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetGitopsAgentResult) string { return v.Id }).(pulumi.StringOutput)
}

// Identifier of the GitOps agent.
func (o GetGitopsAgentResultOutput) Identifier() pulumi.StringOutput {
	return o.ApplyT(func(v GetGitopsAgentResult) string { return v.Identifier }).(pulumi.StringOutput)
}

// Metadata of the agent.
func (o GetGitopsAgentResultOutput) Metadatas() GetGitopsAgentMetadataArrayOutput {
	return o.ApplyT(func(v GetGitopsAgentResult) []GetGitopsAgentMetadata { return v.Metadatas }).(GetGitopsAgentMetadataArrayOutput)
}

// Name of the GitOps agent.
func (o GetGitopsAgentResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetGitopsAgentResult) string { return v.Name }).(pulumi.StringOutput)
}

// Organization identifier of the GitOps agent.
func (o GetGitopsAgentResultOutput) OrgId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGitopsAgentResult) *string { return v.OrgId }).(pulumi.StringPtrOutput)
}

// Project identifier of the GitOps agent.
func (o GetGitopsAgentResultOutput) ProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGitopsAgentResult) *string { return v.ProjectId }).(pulumi.StringPtrOutput)
}

// Tags for the GitOps agents. These can be used to search or filter the GitOps agents.
func (o GetGitopsAgentResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetGitopsAgentResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Default: "AGENT*TYPE*UNSET"
// Enum: "AGENT*TYPE*UNSET" "CONNECTED*ARGO*PROVIDER" "MANAGED*ARGO*PROVIDER"
func (o GetGitopsAgentResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetGitopsAgentResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetGitopsAgentResultOutput{})
}
