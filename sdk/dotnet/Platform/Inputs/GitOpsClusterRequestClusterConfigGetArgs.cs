// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Harness.Platform.Inputs
{

    public sealed class GitOpsClusterRequestClusterConfigGetArgs : global::Pulumi.ResourceArgs
    {
        [Input("awsAuthConfigs")]
        private InputList<Inputs.GitOpsClusterRequestClusterConfigAwsAuthConfigGetArgs>? _awsAuthConfigs;

        /// <summary>
        /// IAM authentication configuration for AWS.
        /// </summary>
        public InputList<Inputs.GitOpsClusterRequestClusterConfigAwsAuthConfigGetArgs> AwsAuthConfigs
        {
            get => _awsAuthConfigs ?? (_awsAuthConfigs = new InputList<Inputs.GitOpsClusterRequestClusterConfigAwsAuthConfigGetArgs>());
            set => _awsAuthConfigs = value;
        }

        /// <summary>
        /// Bearer authentication token the cluster.
        /// </summary>
        [Input("bearerToken")]
        public Input<string>? BearerToken { get; set; }

        /// <summary>
        /// Identifies the authentication method used to connect to the cluster.
        /// </summary>
        [Input("clusterConnectionType")]
        public Input<string>? ClusterConnectionType { get; set; }

        [Input("execProviderConfigs")]
        private InputList<Inputs.GitOpsClusterRequestClusterConfigExecProviderConfigGetArgs>? _execProviderConfigs;

        /// <summary>
        /// Configuration for an exec provider.
        /// </summary>
        public InputList<Inputs.GitOpsClusterRequestClusterConfigExecProviderConfigGetArgs> ExecProviderConfigs
        {
            get => _execProviderConfigs ?? (_execProviderConfigs = new InputList<Inputs.GitOpsClusterRequestClusterConfigExecProviderConfigGetArgs>());
            set => _execProviderConfigs = value;
        }

        /// <summary>
        /// Password of the server of the cluster.
        /// </summary>
        [Input("password")]
        public Input<string>? Password { get; set; }

        [Input("tlsClientConfigs")]
        private InputList<Inputs.GitOpsClusterRequestClusterConfigTlsClientConfigGetArgs>? _tlsClientConfigs;

        /// <summary>
        /// Settings to enable transport layer security.
        /// </summary>
        public InputList<Inputs.GitOpsClusterRequestClusterConfigTlsClientConfigGetArgs> TlsClientConfigs
        {
            get => _tlsClientConfigs ?? (_tlsClientConfigs = new InputList<Inputs.GitOpsClusterRequestClusterConfigTlsClientConfigGetArgs>());
            set => _tlsClientConfigs = value;
        }

        /// <summary>
        /// Username of the server of the cluster.
        /// </summary>
        [Input("username")]
        public Input<string>? Username { get; set; }

        public GitOpsClusterRequestClusterConfigGetArgs()
        {
        }
        public static new GitOpsClusterRequestClusterConfigGetArgs Empty => new GitOpsClusterRequestClusterConfigGetArgs();
    }
}
