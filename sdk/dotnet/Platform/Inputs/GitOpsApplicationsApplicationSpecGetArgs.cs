// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Harness.Platform.Inputs
{

    public sealed class GitOpsApplicationsApplicationSpecGetArgs : global::Pulumi.ResourceArgs
    {
        [Input("destinations")]
        private InputList<Inputs.GitOpsApplicationsApplicationSpecDestinationGetArgs>? _destinations;

        /// <summary>
        /// Information about the GitOps application's destination.
        /// </summary>
        public InputList<Inputs.GitOpsApplicationsApplicationSpecDestinationGetArgs> Destinations
        {
            get => _destinations ?? (_destinations = new InputList<Inputs.GitOpsApplicationsApplicationSpecDestinationGetArgs>());
            set => _destinations = value;
        }

        /// <summary>
        /// The ArgoCD project name corresponding to this GitOps application. An empty string means that the GitOps application belongs to the default project created by Harness.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        [Input("sources")]
        private InputList<Inputs.GitOpsApplicationsApplicationSpecSourceGetArgs>? _sources;

        /// <summary>
        /// Contains all information about the source of the GitOps application.
        /// </summary>
        public InputList<Inputs.GitOpsApplicationsApplicationSpecSourceGetArgs> Sources
        {
            get => _sources ?? (_sources = new InputList<Inputs.GitOpsApplicationsApplicationSpecSourceGetArgs>());
            set => _sources = value;
        }

        [Input("syncPolicies")]
        private InputList<Inputs.GitOpsApplicationsApplicationSpecSyncPolicyGetArgs>? _syncPolicies;

        /// <summary>
        /// Controls when a sync will be performed in response to updates in git.
        /// </summary>
        public InputList<Inputs.GitOpsApplicationsApplicationSpecSyncPolicyGetArgs> SyncPolicies
        {
            get => _syncPolicies ?? (_syncPolicies = new InputList<Inputs.GitOpsApplicationsApplicationSpecSyncPolicyGetArgs>());
            set => _syncPolicies = value;
        }

        public GitOpsApplicationsApplicationSpecGetArgs()
        {
        }
        public static new GitOpsApplicationsApplicationSpecGetArgs Empty => new GitOpsApplicationsApplicationSpecGetArgs();
    }
}
